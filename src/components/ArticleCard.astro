---
import type { ArticleCardProps as Props } from '@types/astro';
import { Image } from 'astro:assets';
import { withBase }from 'utils/withBase.ts';

const { title, description, pubDate, updatedDate, heroImage, tags, author, slug } = Astro.props;

const formattedDate = pubDate.toLocaleDateString('en-us', {
  year: 'numeric',
  month: 'short',
  day: 'numeric',
});

const hasUpdated = updatedDate && updatedDate > pubDate;
---

<article class="bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow flex flex-col h-full">
  <a href={withBase(`/blog/${slug}`)} class="block">
    {heroImage ? (
      typeof heroImage === 'string' ? (
        <img 
          src={heroImage} 
          alt={title} 
          class="w-full h-40 object-cover"
          width="800"
          height="400"
          loading="lazy"
          decoding="async"
        />
      ) : (
        <Image 
          src={heroImage} 
          alt={title} 
          class="w-full h-40 object-cover"
          width={800}
          height={400}
          loading="lazy"
          decoding="async"
          format="webp"
          quality={80}
        />
      )
    ) : (
      <div class="w-full h-40 bg-gradient-to-br from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-600 dark:via-purple-600 dark:to-pink-600 flex items-center justify-center relative overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-transparent via-white/10 to-white/20 dark:from-transparent dark:via-black/10 dark:to-black/20"></div>
        <div class="relative z-10 text-center">
          <div class="w-12 h-12 mx-auto mb-2 text-white/80">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" class="w-full h-full">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0-1.125.504 1.125 1.125V11.25a9 9 0 00-9-9z" />
            </svg>
          </div>
          <p class="text-xs text-white/70 font-medium">BLOG</p>
        </div>
      </div>
    )}
  </a>
  <div class="p-5 flex flex-col flex-grow">
    <!-- Title area -->
    <div class="mb-3">
      <h2 class="text-base font-bold text-slate-900 dark:text-white hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors line-clamp-2">
        <a href={withBase(`/blog/${slug}`)}>{title}</a>
      </h2>
    </div>
    
    <!-- Description area -->
    <div class="mb-4 flex-grow">
      <p class="text-slate-600 dark:text-slate-300 text-sm line-clamp-4">
        {description}
      </p>
    </div>
    
    <!-- Tags area -->
    <div class="mb-4">
      <div class="flex flex-wrap gap-1">
        {tags && tags.length > 0 && tags.slice(0, 3).map(tag => (
          <a
            href={withBase(`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`)}
            class="text-xs px-2 py-0.5 bg-slate-100 dark:bg-slate-700 rounded-full hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors"
          >
            {tag}
          </a>
        ))}
        {tags && tags.length > 3 && 
          <span class="text-xs px-2 py-0.5 bg-slate-50 dark:bg-slate-800 text-slate-500 dark:text-slate-400 rounded-full">
            +{tags.length - 3}
          </span>
        }
      </div>
    </div>
    
    <!-- Author and date area -->
    <div class="mt-auto pt-2 border-t border-slate-100 dark:border-slate-700">
      <div class="flex items-center justify-between">
        <span class="text-xs text-slate-500 dark:text-slate-400 truncate max-w-[50%]">
          By {author || 'Anonymous'}
        </span>
        <time datetime={pubDate.toISOString()} class="text-xs text-slate-500 dark:text-slate-400">
          {formattedDate}
        </time>
      </div>
    </div>
  </div>
</article>